---

#
# Main configuration file for your via installation via Ansible
#


TBD

via:

  # ===== BASIC SETTINGS ==============


  gemStone:
    version: "3.4.5"

  # Location of the source code (default github main repository)
  baseRepository:
    gitUrl: "https://github.com/talk-small-be-open/via-base-main.git"


  # Technical name of project. Something like ViaBlaBla
  siteName: ViaSiteHep
  
  # The part of the source code which is custom to your via instance site
  siteRepository:
    gitUrl: "https://github.com/talk-small-be-open/via-site-hep-main.git"
    name: via-site-hep-src
    metacelloUrl: "github://talk-small-be-open/via-site-hep-src/src"

  # Your organization names
  organizationName: 'hep verlag ag'
  organizationShortName: 'hep'

  # Your domain of the web application (Must be reachable in your network!). Example: media.myorg.com
  appDomains:
    - via-ubuntu
  portalDomains:

  # Domain where your organization emails are from. Example: myorg.com
#  emailDomain: "via-ubuntu"

  # Email address of the via Administrator. Use your own email, I guess.
  adminEmail: "andreas.brodbeck@mindclue.ch"
  adminInitialPw: "test123"

  # Via does not send emails directly. It will forward it to an SMTP server
  # You probably should have an SMTP inhouse, anyway. If you need SMTP-authentication,
  # set the configuration options in the admin backend of via.
  # Example: smtp.myorg.com
  smtpRelayhost: ""

  # Internal ports where the application gems will be listening behind the nginx reverse proxy
  gemPorts: [8087, 8088]

   # TURN Server (for peer to peer)
  turnServer:
    secret: "testing32423wefaskfjakefjhadsfq23fwadf"

  integrationTest:
    userEmail: jmeter.integration.tester@tocca.hep
    userPassword: sdjhw34t895tiuegjh3q4t98h34jhasdhw3r
    
  # ===== ADVANCED SETTINGS (Leave them untouched, if unsure) ==============

  # The neutral way to reach the server. IP address or a FQDN given by the hoster.
  serverAddress: "{{inventory_hostname}}"

  # Should your via instance be reachable by HTTPS? Certificates are being generated automatically with certbot (let's encrypt)
  # Works only if the domain is public, because certbot will validate the domain online.
  useSsl: false

  # Is your via instance not ready for production? If you would like to hide your application behind an extra HTTP basic authentication, use this feature.
  # HTTP Basic Auth Username is "betatester", choose password here:
  isBeta: false
  betaPassword: "beta"

  # Installation folder of via application
  installationPath: "/opt/via"

  # Backup target (duplicity backends). See manual for duplicity for backend URLs
  # Diskstation
  backupTarget: "webdav://via.webdav.backuper@192.168.2.37:5005/tmp/viabackup"

  # Set the passwort for duplicity backend in a root-visible file (sets env var FTP_PASSWORD)
  backupPassword: !vault |
    $ANSIBLE_VAULT;1.1;AES256
    37643234353832643833623737636164343763336234306538376634393062336664623132383263
    3162386431666232383964613065346566333132623762620a636531353365303164613536653230
    35623938663235633135313834653933313262666165396366656532353465353863303538656231
    6330303533353761330a313330396632623535643364333532633436373137613035333362376537
    66636565323834356662386563613231656664626162303832386231333861326538

  # Use this, if you need to set the privat key of your servers user
  # sshPrivateKey: !vault |
  #   $ANSIBLE_VAULT;1.1;AES256
  #   PUT YOUR ENCRYPTED TEXT HERE

