//
// Styles for hep Aurea Bulla
//
// Namespace: "a-" = short for local Aurea

// =======================================================================
// Fonts
// =======================================================================

// via typekit CSS-link bereits vorhanden: roboto, roboto-condensed, eb-garamond, leo, leo-small-text

// // Roboto
// @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,400;0,700;1,400&display=swap');
// // Falsche Leo-Schrift (Merriweather)
// @import url('https://fonts.googleapis.com/css2?family=Merriweather&display=swap');
// // Capitalis Monumentalis
// @import url('https://fonts.googleapis.com/css2?family=Goudy+Bookletter+1911&display=swap');


// =======================================================================
// Importing
// =======================================================================

// Import main styles
@import "../../base/web_root/css/styles.less";

// Our SITE own uikit theme (overrides to the via base uikit theme)
@import "uikit_theme/_import.less";

@import "testdrive.less";

// =======================================================================
// Variables
// =======================================================================


// prefix @a = "Aurea"
@a-color-background: #EAE7E3;
@a-color-background-light: #EAE7E380; // TODO? Transparenz?

@a-color-black: #575754;

@a-color-text: #575754;
@a-color-text-light: #878787;
@a-color-text-line: #87878780;

@a-color-main: #0382A6;
@a-color-main-light: #0382A60D;

@a-color-latin: @a-color-main;
@a-color-french: #9E4F3D;
@a-color-spanish: #D97005;
@a-color-italian: #5C8F29;
@a-color-english: #A882A1;


@a-color-blue: @a-color-main;
@a-color-red: red;
@a-color-aureaExtras: @a-color-main;


@a-color-selection: @a-color-blue;


@a-header-height:             4rem;
@a-header-background:         @a-color-black;
@a-header-padding:            0;



// Redefine basics for this via sub-website
@via-basic-color: @a-color-text;
@via-basic-background-color: @a-color-background;
@wrongColor: @a-color-red;
@correctColor: #cfc;


// =======================================================================
// DEVELOPMENT ONLY
// =======================================================================




// =======================================================================
// Mixins
// =======================================================================

@import "styles_aurea_mixins.less";


// =======================================================================
// General Styles
// =======================================================================

html {
		//bad		height: 100%;
		//scroll-behavior: smooth;
}

// Our own SVG icon set
.standardIcon() {
		@iconSize: 1.2em;
		width: @iconSize;
		display: inline-block;
		margin: 0 0.1em;
//		padding: 1px;
		box-sizing: border-box;		
}

span.svg-icon {
		.standardIcon();

		svg {
				overflow: visible;
				shape-rendering: auto;
				stroke: currentcolor;
				fill: currentcolor;
				stroke-width: 0px;
				&.svg-icon {
						width: 100%;
						//				height: 100%;
						//				vector-effect: non-scaling-stroke;
				}
		}
}

// Same standard size for FontAwesome icons
svg.svg-inline--fa.icon {
		.standardIcon();
}

body {
		
		div.coreContainer {

				// Generally all buttons get the basic color of aurea

				// not "button", conflicts with mediaelement? Todo: Still true?
				// button, input.submit {
				.bigButton, button.uk-button, a.uk-button {
						.aureaButton();
				}

				// Exception: Inverse buttons for main buttons in a exercise
				div.exerciserMainButtons .uk-button {
						.aureaButton(true)
				}
		}

		div.footer {
				padding: 40px 50px;
				background-color: @a-color-black;
				color: white;

				a {
						color: white;
				}

				div.company {
						margin-bottom: 2em;
						img.hepLogo {
								vertical-align: top;
								width: 230px;
						}
						
						div.address {
								font-size: 18px;
								line-height: 28px;
								margin-top: 2em;
						}
						
				}
				
		}


		&.wantColorBackground {
				min-height: 100vh;
				background-color: @a-color-main;
				div.coreContainer {
						background-color: @a-color-main;
						color: black;

						a {
								text-decoration: underline;
						}

				}

		}

		// Styles for the non-logged in public UI
		&.public {

				input.submit, button, a.uk-button {
						color: white;
						border-color: white;
				}

				div.coreContainer {
						a {
								color: black;

								&:hover {
										color: #666;
								}
						}
				}
		}
}

// General button styling
//WEG: Conflict with mediaelement and anyway to general: button
input.submit, button.uk-button, a.uk-button {
		.button();
}


span.pillarDocument {

		.languageColors() {
				&.language-i {
						color: @a-color-italian;
				}
				&.language-e {
						color: @a-color-english;
				}
				&.language-s {
						color: @a-color-spanish;
				}
				&.language-f {
						color: @a-color-french;
				}
				&.language-l {
						color: @a-color-latin;
				}
		}

		span.language {
				.languageColors();
		}


		div.pillarParagraph {
				.languageColors();

				+ div.pillarParagraph {
						margin-top: 1em;
				}

				&.border {
						padding: 0.5em;
						margin: 0.5em;
						border: 1px solid black;
				}

				// Custom styles, used with pillar syntax ((style blablabl))
				.dialogA {
						color: yellow;
				}

				.dialogB {
						color: yellow;
				}

				.dialogC {
						color: yellow;
				}

				.dialogD {
						color: yellow;
				}
				
				.dialogE {
						color: yellow;
				}

				
				.noWrap {
						white-space: nowrap;
				}

				
				// Custom paragraph styles, used with pillar syntax @@style blablabl
				&.dialogA {
						.dialogA();
				}

				&.dialogB {
						.dialogB();
				}

				&.dialogC {
						.dialogC();
				}

				&.dialogD {
						.dialogD();
				}

				&.dialogE {
						.dialogE();
				}

				
		}
}


// =======================================================================
// UI components
// =======================================================================

div.mainContainer {
		position: relative;
		box-sizing: border-box;
}

div.VIADeviceDetectorComponent {
		background-color: @a-color-main;
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;

		.spinner {
				color: black;
				font-size: 3rem;
				// width: 33vw;
				// height: 33vw;
		}
		
		a.spinnerMessage {
				.uk-text-muted();
				color: #666;
				font-size: 80%;
		}
}

//
// header 
//
div.aureaHeader {
    
		background-color: @a-header-background;
		color: white;
		padding: @a-header-padding;
		height: @a-header-height;

		a.aureaLogo {
				.serif();
				font-size: 1.5rem;
				color: white;

				span.aureaLogo {
						
						&.wide {
								img {
										width: 8em;
								}
						}
						&.tall {
								display: none;
								img {
										width: 4em;
								}
						}
				}

		}

		nav {
				height: @a-header-height;

				&.aureaMenubar {

						display: flex;
						justify-content: space-between;

						div.menubarLeft {
								display: flex;
								align-items: center;
								padding-left: 0.5em;
								padding-right: 0.5rem;
						}
						div.menubarCenter {
								
								li a span.menuLabel {
										margin-left: 0.1em;
								}

						}
						div.menubarRight {
								
						}
						
						ul.uk-navbar-nav {
								height: @a-header-height;

								
								li {
										padding-top: 1em;

										&.active {
												border-bottom-width: 8px;
												border-bottom-style: solid;
												border-bottom-color: @a-color-main;
												
										}

								}
								span.svg-icon {
										// width: 1.3em;
										// font-size: 1.3em;
								}
						}

						
						a {
								color: white;
								vertical-align: middle;

								+ a {
										margin-left: 0.5rem;
								}
								
								&.mainMenuToggler {
										span.uk-icon {
												margin-right: 0.2em;
										}
								}
						}

						form.searchForm {
								
								input.searchInput {
										background-color: white;
										color: black;
										//width: 3em;

										&::placeholder {
												color: #999;
										}
								}
						}

				}
		}
		

		// Menu, in navbar or in offcanvas
		#mainMenu {
				ul.uk-nav {
						li {
								font-size: 1.1rem;
								font-weight: bold;

								ul.uk-nav-sub {
										padding: 0;
										li {
												font-size: 1.1rem;
												font-weight: normal;
										}
								}

						}

				}

				&.uk-offcanvas {
						//						color: white;

						div.uk-offcanvas-close {
								cursor: pointer;
								// span.svg-icon {
								// 		font-size: 2em;
								// }
						}
						
						ul.uk-nav {
								li {
										a {
												//												color: white;
												white-space: nowrap;

												span.svg-icon, svg.svg-inline--fa.icon {
														text-align: center;
														display: inline-block;
														width: 1.1rem;
												}

												span.menuEntryText {
														.uk-text-truncate();
												}
										}

										&.logout {
												padding-top: 1em;
										}
								}
						}

						div.uk-offcanvas-bar {
								overflow-y: hidden;
								
								div.mainMenuContainer {
										// position: absolute;
										// bottom: 0;
										// top: 0;
										height: 100%;
										display: flex;
										flex-direction: column;
										justify-content: space-between unsafe;
										align-items: stretch;
										overflow-y: auto;

										div.mainMenuItems {
												flex-grow: 1;
												flex-shrink: 1;
										}
										
										div.mainMenuFooter {
												// position: absolute;
												// bottom: 0;
												padding-top: 2em;
												flex-grow: 0;
												flex-shrink: 0;

												img.hepLogo {
														width: 50%;
														//										width: @offcanvas-bar-width
												}
										}

								}
								
						}
				}
		}
}


div.inputDialog {
		input[type=text], textarea {
				width: 100%;
				font-size: 120%;
				margin: 1em 0;
		}
}

div.VIAConfirmationComponent {
		button {
				min-width: 5em;
				margin-right: 1em;
		}
}

div.VIAPublicHomeComponent {

		padding: 2em 0;
		background-color: @a-color-main;
		//		position: relative;
		
		
		div.aureaBanner {
				// background-color: @t-color-red;
				// background-image: url(/site/images/public_banner.jpg);
				// background-repeat: no-repeat;
				// background-size: cover;
				padding: 0;
				margin-bottom: 2em;
				position: relative;

				img.bannerImage {
						//						position: absolute;
						display: block;
				}

				div.bannerText {
						position: absolute;
						width: 100%;
						display: block;
						margin: 3em 0 0 66%;
						color: white;
						font-family: @base-heading-font-family;
						
						div.bannerTextTitle {
								font-size: 200%;
								margin-bottom: 1em;
						}

						div.bannerTextSubtitle {
								
						}
				}
				
		}
		
		div.loginSection {
				margin: 1em 0;
				font-size: 120%;
				
				.bigButtonStyle(white, @a-color-main, false);

		}

		div.infoButtons {
				div.infoButton {
						font-size: 120%;
						line-height: 150%;
				}
		}

}



div.VIAAurLoginComponent {
		height: 100%;
}

div.VIAAurStartComponent {
		padding: 2em 0;

		div.VIAModuleFinderComponent {
				margin-bottom: 2em;
		}

		.mainEntryAnchor() {
				display: flex;
				justify-content: space-between;
				align-items: center;

				@pad: 0.5em;

				span.entryTitle {
						.serif();
						flex-grow: 9;
						padding: @pad 3px;
				}

				span.goAhead {
						color: black; // @a-color-text;
						flex-grow: 1;
						flex-shrink: 0;
						text-align: right;
						padding: @pad 3px;
				}
		}

		
		div.caputs {
				ul.caputsList {
						li {
								.catalogListItem();

								div.caputEntry {
										a.gotoCaput {
												.mainEntryAnchor();
										}
								}
						}
				}
		}

		div.aureaExtras {
				div.aureaExtra {

						div.extraEntry {

								.catalogListItem();

								a.gotoExtra {
										.mainEntryAnchor();
								}
						}
				}
		}
		
}

div.VIAModuleFinderComponent {

		padding-top: 1em;

		.goButton() {
				background-color: red;
				color: white;
		}

		.focus() {
				background-color: @a-color-selection;
				color: white;
				outline: none;				
		}

		div.searchBar {
				border: 1px solid black;
				padding: 0 0 0 0.1em;
				position: relative;
				@fontsize: 1.5rem;
				line-height: 1.5em;
				font-size: @fontsize;
				
				input[type=text] {
						font-size: @fontsize;
						border: none;
						display: inline-block;
						

						&.searchInputText {
						}

						&:focus {
								.focus();
								border: none;
						}
				}


				span.searchInput {
						font-size: @fontsize;
						display: inline-block;
						line-height: 1em;
						height: 1em;
						padding: 0.1em;
						margin: 0.1em;
						vertical-align: bottom;
						
						&.searchInput1 {
								width: 0.7em;
						}

						&.searchInput2 {
								width: 3em;
						}

						// &.searchInput1, &.searchInput2, &.searchInputText {
						// }

						&.focused {
								.focus();
						}
				}

				
				span.dot {
						font-size: @fontsize;
						display: inline-block;
						width: 0.5em;
						margin-right: 0.1em;
						text-align: center;
						font-weight: bold;
				}

				button.go {
						.goButton();
						font-size: @fontsize;
						border: none;
						position: absolute;
						top: 0;
						height: 100%;
						right: 0;
				}
		}

		div.keyboard {
				.noUserSelect();
				margin: 1em 0;

				&.disabled {
						visibility: hidden;
				}
				
				.keyboardButton {
						@color: #666;
						
						font-size: 1.5rem;
						padding: 0.4em 0;
						background-color: @color;
						color: white;
						text-align: center;
						display: inline-block;
						width: 100%;
						height: 1.2em;
						border: none;
						margin: 0;
						box-sizing: content-box;
						cursor: pointer;

						&:hover {
								background-color: lighten(@color, 30%);
						}

						&.go {
								.goButton();
						}
				}
		}


}

div.VIAModulesListComponent {
		padding-top: 1em;
}


div.VIAAurModuleExerciser {
		
		div.moduleNavigation {
				.secondaryNavbar();


				span.left {
						text-align: left;
						width: 3em;
						padding-left: 1em;

				}

				span.center {
						font-weight: 600;
						display: inline-block;
				}
				
				span.right {
						text-align: right;
						width: 3em;						
						padding-right: 1em;
				}
				
				span.arrow {
						display: inline-block;
						width: 2em;
				}

				span.backText {
						font-weight: normal;
				}
		}


		div.moduleBottomNavigation {
				margin: 1em 0 0 0;
				text-align: center;
				padding: 0.3em;

				display: flex;
				justify-content: space-between;
				align-items: center;

				a {
						color: inherit;
				}

				span {
						vertical-align: middle;
						white-space: nowrap;
				}
		}


		
		h2.moduleTitle {
				margin-top: 1em;
				margin-bottom: 1em;

				span.divider {
						font-weight: normal;
						margin: 0 1em;
				}
				
		}

		div.moduleBody {
				margin: 0;
				padding-bottom: 1em;
		}

		// Accordion top line

		.fatLineDivider() {
				border-bottom-width: 1px;
				border-bottom-style: solid;
				border-bottom-color: @a-color-text-line;

				&:first-child {
						border-top-width: 1px;
						border-top-style: solid;
						border-top-color: @a-color-text-line;
						
				}
		}


		div.accBar {
				.fatLineDivider();
//				padding: 1em 0;
				margin: 0;
				cursor: pointer;

				display: flex;
				justify-content: space-between;
				align-items: stretch;

				@ignoredColor: #666;
				@pad: 0.1em;

				a {
						color: inherit;
				}
				
				&.ignored {
						//						background-color: #eee;
						cursor: default;

						.accTitle {
								color: @ignoredColor;
								text-decoration-line: line-through;
								text-decoration-color: black;
								text-decoration-style: double;
						}
						
				}
				
				&.isOpen {
						background-color: #eee;
						div.right {
								.accToggle {
										.doOpen {display:none}
										.doClose {display:inline-block}
								}
						}
				}

				
				div.left {
						padding: @pad 0;
						display: flex;
						justify-content: flex-start;
						align-items: center;

						span.level {
								width: 2em;
								padding-top: 0.2em;
								flex-shrink: 0;
//								align-self: center;
								display: inline-block;
								// position: relative;
								// top: 2px; // Optical centering
								img.level {
										height: 1em;
										vertical-align: baseline;
								}
						}

						
						.accTitle {
								.titleFontFamily();
								font-weight: normal;
								padding: 0.5em 0;
								margin: 0;
								margin-right: 0.6em;
								display: inline;
//								color: @t-color-blue;
								text-align: left;
								align-self: flex-start;
						}


						span.accIcons {
								padding: 0.5em 0;
								flex-shrink: 0;
								
								//						margin-left: 1em;
								img.iconActivityType {
										vertical-align: text-top;
										width: 2em;
										height: auto;
								}
						}
						
				}

				div.right {
						display: flex;
						justify-content: flex-start;
						align-items: center;
						
//						white-space: nowrap;
						flex-shrink: 0;
						padding: @pad 0;
						
						span.accActions {
//								vertical-align: middle;
//								display: inline-block;
								font-size: 1.5rem;
								margin: 0.3em 1em;

								a.ignoreTask {
										svg.fa-toggle-off {
												color: @ignoredColor;
										}
										svg.fa-toggle-on {
												color: green;
										}
								}
						}

						.accToggle {
								// vertical-align: middle;
								// display: inline-block;

								//								font-size: 2rem;

								// display: inline-flex;
								// justify-content: space-between;
								// align-items: center;
								
								// .icon {
								// 		vertical-align: middle;
								// }
								
								.doOpen {display:inline-block}
								.doClose {display:none}
						}
						
				}
				

		}

		div.taskExercise {

				// If opened and waiting for content, we want to see at least whitespace
				min-height: 1em;
				
				&.hiddenTaskExercise {
						.hiddenSectionButWithDefinedDimension();
				}
				+ .noTitleTaskExercise {
						.fatLineDivider();
				}
		}

}


div.VIAAurTaskExerciser {
		padding-left: 0.2em;
		padding-right: 0.2em;
		margin-bottom: 2em;
}

.capitalis {
		.capitalis();
}


// Not inside the VIAAurModuleExerciser, because it could be stand alone (e.g. in the backend testdrive)
// Styles inside the content of tasks
div.exercise {
		
		@dropTargetHoverColor: yellow;
		
		// Wozu?
//		margin-bottom: 50px;

		// General wrapping styles for backend usage
		.spaced {
				letter-spacing: 0.1em;
				line-height: 1.6em;
		}
		.framed {
				padding: 10px;
				margin: 15px 0;
				border: 1px solid #aaa;
		}
		.smaller {
				font-size: 88%;
		}
		.indented {
				margin-left: 10%;
				margin-right: 10%;
		}
		.capitalis {
//				.capitalis();
		}
		.spaced-framed {
				.spaced();
				.framed();
		}

		// Titles inside task content, should not be as big as official titles
		h1, h2, h3 {
				font-weight: bold;
				text-align: left;
				line-height: 1em;
				margin-top: 1em;
				margin-bottom: 0.5em;
		}

		h1 {
				font-size: 120%;
		}

		h2 {
				font-size: 110%;
		}

		h3 {
				font-size: 100%;
		}

		table {
				//						border: 1px solid #999;
				border-collapse: collapse;

				tr {
						border-bottom: 1px solid #999;								
				}

				td, th {
						padding-top: 5px;
						padding-bottom: 5px;
						padding-right: 2px;
				}

				td + td, th + th {
						border-left: 1px solid #999;
						padding-left: 2px;
				}
		}

		
		input[type=text] {
				font-family: inherit;
				font-size: inherit;
				padding: 0 2px;
				margin: -2px 0;
		}

		input[type=text].clozeTextPlaceholder {
				.clozeTextPlaceholder();

				&:focus {
						outline: 1px solid #ccc;
						background-color: #ffd;
				}

				// Intentionally set as empty by user
				&.markedAsEmpty {
						background-color: black;
				}
		}

		span.emptyAnswerPlaceholder {
				font-style: italic;
		}

		span.markAsEmpty {
				cursor: pointer;
				// border: 2px solid black;
				//						padding: 0 3px;

				// &.active {
				// 		background-color: green;
				// }
		}

		
		input, select, textarea {
				// font-family: @base-body-font-family;
		}

		p {
				margin-top: 3px;
				margin-bottom: 3px;
		}

		hr.divider {
				border-color: #999;
				margin: 2em 0;
		}



		div.p2pStatus, div.talkmasterStatus {

				
				//border: 2px solid green;
				//				margin: 0.5em;
				//						padding: 0.3em;
				display: inline-block;
				// font-size: 60%;
				color: #eee;
				span.p2pIcon {
						font-size: 75%;
				}

				&.open {
						//						background-color: grey;
						color: black;
				}

				&.data {
						color: green;
				}

				&.error {
						// border: 2px solid red;
						color: orange;
						//color: red;
				}
		}
		
		
		div.selectOneInput, div.selectPointsInput {
				margin-bottom: 10px;

				label:hover {
						background-color: #eee;
				}

				span.wrongIcon {
						position: relative;
						left: -15px;
				}


		}


		div.selectOneInput, div.selectMany {

				.bigButtonStyle(@a-color-blue);

				label.bigButton {
						//								text-align: left;
						position: relative;
						padding-left: 1.5em;
						padding-right: 1.5em;

						.checkedIcon {
								visibility: hidden;
								position: absolute;
								left: 0.3em;
								z-index: 999;
						}

						&.active {
								.checkedIcon {
										visibility: visible;
								}

								&.wrong {
										background-color: @wrongColor;
										// .checkedIcon {
										// 		visibility: hidden;
										// }
								}

								&.correct {
										// inverted text, so darken:
										background-color: darken(@correctColor, 55%);
								}


						}

				}

		}
		
		div.selectOneInput {

				select.selectOneInput {
						max-width: 100%;
				}


		}

		div.selectMany {
				// label:hover {
				// 		background-color: #eee;
				// }

				span.hintSymbol {
						display: inline-block;
						margin: 1em 0;
				}

				// span.wrongIcon {
				// 		position: relative;
				// 		left: -15px;
				// }

		}
		
		div.clozeText {
				line-height: 1.8em;

				div.selectOneInput {
						display: inline-block;
				}


				span.dragDropDraggable {
						.draggable();
						
						background-color: #eee;
						padding: 1px 2px;
						border: 1px solid #ccc;

						// margin-bottom: 10px;
						// line-height: normal;
						display: inline-block;

						&:hover {
								border: 1px solid black;
						}

						figure.inlineAssetImage {
								display: inline-block;

								figcaption {
										display: none;
								}
						}
						
				}
				
				span.dragDropTarget {
						display: inline-block;
						min-width: 100px;
						background-color: #eee;
						padding-left: 5px;
						padding-bottom: 1px;
						min-height: 1em;
						border-top: none;
						border-left: none;
						border-right: none;
						border-bottom: @borderBottomClozePlaceholders;

						.dropHover();

						// Drag element in a drop container
						span.dragDropDraggable {
								margin-right: 10px;
						}

						// Container, combining correction and element
						span.draggableContainer {
								white-space: nowrap;
								display: inline-block;
						}
				}

				div.dragDropDraggables {
						background-color: #eee;
						border: 1px dotted black;
						margin: 10px 0;
						padding: 0.5em 5px;
						min-height: 20px;

						.dropHover();
						
						span.dragDropDraggable {
								.draggable();
								
								margin: 5px;
								// line-height: normal;
								display: inline-block;

								figure.inlineAssetImage {
										display: inline-block;

										figcaption {
												display: none;
										}
										
										// span.assetInfo {
										// 		.uk-text-muted();
										// 		cursor: pointer;
										// 		float: right;
										// }
								}
								
						}
				}

		}

		div.exerciserMainButtons {
				margin-top: 30px;
		}


		div.audioPlayer {
				.clearfix();

				margin: 10px 0px;
				span.assetInfo {
						float: right;
				}

				
				div.transcriptionContainer {

						div.transcriptionText {
								font-size: 90%;
								line-height: normal;
						}

						
						div.audioTranscription {
								&.disabled {
										.uk-hidden();
								}

								button.printThis {
										float: right;
								}
						}
				}
		}

		
		div.videoPlayer {
				.clearfix();
				
				div.videoContainer {
						margin-right: 10px;

						video {
								width: 100%;
								height: auto;
								//box-sizing: border-box;
						}
				}

				div.transcriptionContainer {

						div.videoTranscription {
								&.disabled {
										.uk-hidden();
								}

								button.printThis {
										float: right;
								}
						}

						div.transcriptionText {
								font-size: 90%;
								line-height: normal;
						}
				}

				span.assetInfo {
						float: right;
				}
		}

		div.youtubePlayer, div.vimeoPlayer, div.srgVideoPlayer {
				position: relative;
				width: 100%; // Can be reduced by responsive rules
				max-width: 100%;

				> div.aspectRatioBox {
						position: relative;
						width: 100%;
						padding-bottom: 56.25%; // Trick: Keeps 16:9 ratio, see https://fettblog.eu/blog/2013/06/16/preserving-aspect-ratio-for-embedded-iframes/

						iframe {
								position: absolute;
								top: 0;
								left: 0;
								width: 100%;
								height: 100%;
						}


				}
				
		}

		div.imageDisplayer {
				span.image {
						margin-top: 0.5em;
						margin-bottom: 0.5em;
						display: inline-block;
						text-align: right;
						img {
								display: block;
						}
						span.assetInfo {
						}
						
				}
		}

		div.fileDownloader {
				a {
						.icon {
								margin-right: 0.5em;
						}

						img.downloadPreview {
								max-width: 10em;
								border: 1px solid #eee;
						}

						&:hover {
								img.downloadPreview {
										max-width: 10em;
										border-color: @base-link-color;
								}
								
						}
				}
				span.assetInfo {
						margin-left: 0.5em;
				}
				
		}

		span.assetInfo {
				.uk-text-muted();
				cursor: pointer;
		}

		span.hintSymbol {
				display: inline-block;
				margin: 0.2em;
				//						vertical-align: middle;
		}


		// Obsolete? Haben wir mapPairs-DragDrop bei Aurea?
		// div.mapPairs {
		// 		@pairBorder: 1px solid black;
				
		// 		border-top: @pairBorder;
		// 		display: table;
		// 		border-collapse: collapse;
				
		// 		div.objectPair {
		// 				display: table-row;
		// 				border-bottom: @pairBorder;

		// 				.dropHover();

		// 				span.hintSymbol {
		// 						float:left;
		// 						// margin-left: -20px;
		// 						// margin-top: 10px;
		// 						margin-top: 0;
		// 						margin-bottom: 0;
		// 				}
						
		// 				div.leftObject {
		// 						display: table-cell;
		// 						padding-left: 10px;
		// 				}

		// 				div.middleColumn {
		// 						display: table-cell;
		// 				}

		// 				div.rightObject {
		// 						@dragHandleOffset: 25px;

		// 						display: table-cell;
		// 						padding: 5px 10px 5px (@dragHandleOffset + 10px);

		// 						div.objectPairDraggable {
		// 								background-color: #eee;
		// 								padding: 10px;
		// 								border: 1px solid #ddd;
		// 								margin-bottom: 10px;

		// 								.draggable();

		// 								&:hover {
		// 										border: 1px solid #333;
		// 								}

		// 								&:only-child {
		// 										margin-bottom: 0;
		// 								}

		// 								&:not(:first-child) {
		// 										background-color: #f99;
		// 								}

		// 								span.dragHandle {
		// 										position: absolute;
		// 										margin-left: -@dragHandleOffset;
		// 								}

		// 						}
		// 				}
		// 		}
		// }


		div.mapPairsClickClick {
				@pairBorder: 2px solid black;
				
				//						border-top: @pairBorder;
				display: table;
				border-collapse: collapse;


				div.head {
						display: table-row;
						//								border-bottom: @pairBorder;
						div {
								display: table-cell;
								text-align: left;
								padding-left: 2em;
								padding-bottom: 5px;
						}
				}

				div.objectPair {
						display: table-row;
						//								border-bottom: @pairBorder;

						.selection() {
								&:hover {
										background-color: lightyellow;
								}
								&.selected {
										background-color: yellow;
								}
								&.correct {
										background-color: @correctColor;
								}

						}
						
						span.hintSymbol {
								float:left;
								// margin-left: -20px;
								// margin-top: 10px;
								margin-top: 0;
								margin-bottom: 0;
						}
						
						div.leftObject {
								display: table-cell;
								min-width: 20%;
								background-clip: padding-box;
								border: @pairBorder;
								padding: 3px 22px 5px 10px;
								cursor: pointer;
								vertical-align: middle;
								.selection();
						}

						div.rightObject {
								display: table-cell;
								background-clip: padding-box;
								border: @pairBorder;
								padding: 3px 10px 5px 10px;
								cursor: pointer;
								position: relative;
								vertical-align: middle;
								.selection();

								svg.puzzle {
										position: absolute;
										left: -19px;
										top: calc(50% - 9px);
										width: 20px;
										.inlet {
												fill: white;
										}

								}

								&.selected {
										svg.puzzle {
												.inlet {
														fill: yellow;
												}
										}
								}

								&:hover {
										svg.puzzle {
												.inlet {
														fill: lightyellow;
												}
										}
								}

								&.correct {
										svg.puzzle {
												.inlet {
														fill: @correctColor;
												}
										}
								}

						}

						div.endColumn {
								display: table-cell;
						}

				}
		}
		
		div.score {
				margin-top: 2em;
				// background-color: white;
				font-weight: bold;
		}


		div.objectPairDragHelper {
				padding: 10px;
				border: 1px solid black;
		}

		div.highlightAreas {

				@highlightColor: lighten(@a-color-selection, 20%);
				background-color: white;
				
				.noUserSelect();
//				.noTouch();
				touch-action: pan-y;

				.spaced-framed();

				span.highlightArea.solution {
						border: 1px solid #333;
						padding-left: 1px;
				}

				div.pillarParagraph:first-child {
						margin-top: 0;
				}

				span.selChar {
						cursor: url('/images/horizontal-text-select.cur'), text;
						background-color: white;
						&.highlighted {
								background-color: @highlightColor; // redundant
								color: white;
								padding-top: 1px;
//								cursor: pointer;
								cursor: url('/images/selection-remove.cur'), pointer;

						}
						&.selected {
								color: white;
								background-color: @a-color-selection !important;
						}

				}


				// If not first take, then we need to show correction. All highlighted elements are wrong
				// except the ones which are in a correct highlight area
				// A bit dirty, but OK
				&.checked {
						span.selChar {
								&.highlighted {
										background-color: @wrongColor;
								}

								// Should be stronger than "highlighted" above
								&.highlightedNow {
										background-color: @highlightColor;
								}
						}
				}
				
				span.highlightArea.correct {
						span.selChar.highlighted {
								color: unset;
								background-color: @correctColor;
						}
				}


		}

		div.taskGroup {
				
				div.taskGroupItem {
						margin: 10px 0px;
				}
		}

		div.taskBrickGroupToggler {
				padding: 0.5em 3px;
				margin: 0.5em 0;
				cursor: pointer;
				background-color: #eee;
				//						color: white;
				border: none;

				&:hover {
						background: #999;
				}
		}

		div.taskBrickGroup {
				// border: 1px solid black;
				padding: 5px;

				&.hidden {
						.hiddenSectionButWithDefinedDimension()
				}

		}
		
		
		div.orderItems {
				ul.orderItemsList {
						list-style: none;
						padding: 0;
				}

				
				ul.orderItemsList, ol.orderItemsList {
						//								list-style: none;
						//								padding: 0;

						li.orderItem {
								@pairBorder: 1px solid black;
								@pad: 0.3em;

								&:hover {
										background-color: #eee;
								}
								
								border-top: @pairBorder;
								&:last-child {
										border-bottom: @pairBorder;
								}

								&.draggable {
										cursor: move;
								}
								
								margin-top: 0;
								margin-bottom: 0;
								padding: @pad 0;

								div.orderItemContent {

										display: flex;
										justify-content: flex-start;
										align-items: flex-start;
										
										div.orderSymbol {
												// width: 2em;
												// display: inline-block;
												flex: 0 0 2rem;
										}

										div.orderContent {
												//										display: inline-block;
												//										flex-basis: auto;
										}
								}
						}
				}
		}

		div.hintBox {
				display: flex;
				align-items: flex-end;
				flex-direction: column;
				margin: 2px 0 5px 0;
				
				span.hintBoxToggler {
						.uk-text-muted();
						cursor: pointer;
						border: 1px solid #999;
						padding: 0 2px;
						font-size: 70%;
						line-height: 1.5em;
				}
				div.uk-alert {
						//width: 100%;
						margin-top: 5px;
						align-self: stretch;

						h3 {
								margin-top: 5px;
						}
				}
				
		}

		div.dualImageSwitcher {
				div.imagesContainer {
						display: inline-block;
						div.image {
								display: inline-block;
								text-align: right;
								img {
										display: block;
								}
								span.assetInfo {
								}
								&.hidden {
										display: none;
								}
								// &.image2 {
								// 		img {
								// 				border: 2px solid yellow;
								// 		}
								// }
						}
				}

				div.tools {
						.uk-margin-top();
						.printThis {
								.uk-margin-left();
								float: right;
						}
				}
		}


		
		div.textListInput {

				margin-bottom: 2em;

				div.hintFragments {
						padding: 1em;
						background-color: @a-color-background-light;
						border: 1px solid black;
						user-select: none;
						
						span.hintFragment {
								margin: 0.5em;

								&.typingAssisted {
										cursor: pointer;
										background-color: yellow;
										padding: 0 0.2em;
										border: 1px dotted #666;
										&:hover {
												background-color: white;
										}
								}
						}

						div.hintTools {
								margin-top: 1em;
						}
				}
				
				div.textListLines {
						
						margin: 0.5em 0 0.5em 0;

						div.textListLine {
								display: flex;
								justify-content: space-between;

								span.lineNumber {
										color: @a-color-text-light;
										display: inline-block;
										width: 1.5em;
								}

								input[type=text].textInput {
										.clozeTextPlaceholder();
										width: 100%;
										caret-color: red;

										&.correct {
												background-color: @correctColor;
										}
										&.wrong {
												background-color: @wrongColor;
										}

										
										&:focus {
												outline: 1px solid #ccc;
												background-color: #ffd;
										}

								}

								span.clearLine {
										cursor: pointer;
										visibility: hidden;
								}

								&:hover, &:focus-within {
										span.clearLine {
												visibility: visible;
										}										
								}
								
						}
				}

		}

		div.textMemo {
				background-color: #eee;
				padding: 1em;
				textarea.textMemo {
						width: 100%;
						margin-top: 1em;
						padding: 1em;
						border: 1px solid #666;
						background-color: #fefefe;
						box-sizing: border-box;
						resize: none;
				}
		}

		div.glossary {
				margin: 2em 0;
				
				div.glossaryToolbar {
						margin-bottom: 0.5em;
						display: flex;
						justify-content: space-between;
						align-items: flex-start;
						
						span.jumpers {
								margin-right: 1em;
								span.jumper {
										font-weight: bold;
										cursor: pointer;
										margin: 0 0.2em;
										display: inline-block;
								}
						}
						
				}
				div.glossaryBody {

						&.scrolling {
								@h: 80vh;
								max-height: @h;
								overflow-y: auto;
//								padding-bottom: @h; // so we can scroll up the bottom line
						}

						table.glossaryEntries {
								width: 100%;
						
								tr.glossaryEntry {

										border-top: 1px solid black;
										border-bottom: 1px solid black;

										td.title {
												font-weight: bold;
												vertical-align: top;
										}
										&.section {
												td.title {
														background-color: #eee;
												}
										}
										
										&.searchFound {
												background-color: lightyellow;
										}
										&.searchFoundInTitle, &.internalGoto {
												td, td.title {
														background-color: yellow;
												}
										}										
										&.searchNotFound {
												display: none;
										}
								}
						}
				}
		}
		
} // div.exercise




div.VIAUnitComponent {


		div.unitNavigation {
				.secondaryNavbar();

				

				span.left {
						text-align: left;
//						display: inline-block;
						width: 3em;						
						padding-left: 1em;
				}

				span.right {
						text-align: right;
						display: inline-block;
						width: 3em;						
				}
				
		}

		div.legend {
				text-align: right;
				font-size: 80%;
		}

}

ul.modulesList {
		
		padding-left: 0;
		list-style-type: none;
		
		li {
				.catalogListItem();

//				font-weight: bold;

				// color: @t-color-level-normal;
				// .levelColors();


				div.moduleEntry {
						display: flex;
						justify-content: space-between;
						align-items: center;

						@pad: 0.5em;
						
						a.gotoModule {
								//						white-space: nowrap;
								display: flex;
								justify-content: flex-start;
								align-items: center;
								flex-grow: 9;
								padding: @pad 3px;

								span.indexCode {
										.titleFontFamily();
										display: inline-block;
										width: 2.5em;
										flex-shrink: 0;
								}

								span.level {
										width: 2em;
										flex-shrink: 0;
										display: inline-block;
										position: relative;
										top: 2px; // Optical centering
										img.level {
												height: 1em;
												vertical-align: baseline;
										}
								}

								span.moduleTitle {
										.titleFontFamily();
										flex-grow: 9;
										flex-basis: auto;
										// display: inline-block;
										// width: auto;
								}

						}
						span.rightStuff {
								flex-grow: 1;
								flex-shrink: 0;
								//										text-align: right;

								display: flex;
								justify-content: flex-end;
								align-items: center;
								//										padding: @pad 0;

								// Shitty little pixels offsets!
								> * {
										vertical-align: bottom;
								}
								
								
								span.moduleStatus {
								}

								span.goAhead {
										margin-left: 1em;
										color: black;
								}
								

						}
						
						
						span.betatesterSign {
//								display: inline-block;
								margin-left: 0.5em;
								margin-right: 0.5em;
								color: green;
								font-size: 80%;
								position: relative;
								top: -0.5em;
						}
				}

		}
}

div.backButton {
	//	.uk-container();
		padding: 1em 0 1em 1em;

		a.backButtonAnchor {
				.button();
				// background-color: @global-primary-background;
				// color: #fff;
				// font-weight: normal;
				// font-size: 1em;

				// &:hover {
				// 		color: #ddd;   
				// }
				
		}
}

div.zoomBox {
		padding: 0.3em;
		margin-top: 0.3em;
		//		border: 1px solid black;
		div.header {
				position: relative;
				padding: 0.5em 0;
//				background-color: #999;
				color: #999;
				font-size: 85%;
				text-align: center;
				//border-bottom: 1px dotted black;
				
				span.title {
						
				}
				span.close {
						font-size: 2rem;
						//				font-weight: bold;
//						text-align: right;
						position: absolute;
						right: 0;
						top: 2px;
						a {
								color: black;
						}
				}
		}
}

div.VIAAurMyProfileComponent, div.VIAAurTeacherMyCockpit, div.VIAAurMyPortfolioComponent {

		padding-top: 1em;

		h1 {
				color: @a-color-main;
		}
		
		h1, h2, h3, h4 {
				text-align: left;
		}

		li {
				.catalogListItem()
		}
		
}

div.VIAAurTeacherMyCockpit {

		.invitationCode {
				font-family: monospace;
				font-size: 120%;
				border: 1px solid black;
		}
}

div.VIAAurMyPortfolioComponent {

		h4.currentUnit {
				margin-top: 0;
		}
		
		div.legend {
				text-align: right;
				font-size: 80%;
		}
		
}




div.lightboxModal {
		div.invitationCode {
				font-size: 300%;
				text-align: center;
				font-family: monospace;
		}
}

// Inside a uk-modal
div.uk-modal {
		div.teacherNotes {
				div.teacherNotesText {
						margin: 1em 0;
				}
		}
}

div.VIAInformationComponent {
		div.message {
				margin-bottom: 1em;
		}
}

div.VIAStaticTextDisplayerComponent {
		padding: 1em;
}

div.VIACaptchaComponent {
		pre.captcha {
				line-height: 1.1em;
		}
		input.captcha {
				font-size: 200%;
				font-family: monospace;
				border: 2px solid green;
				padding: 0.2em;
				margin: 0.2em 0 0.2em 0;
				max-width: 100%;
				box-sizing: border-box;
		}
}

div.VIAAurRegisterComponent {
		label {
				font-weight: bold;
		}
}

// ===========================================
// Demo
// ===========================================

@demoColor: #fffd37;

span.uk-label.demoLabel {
		background-color: @demoColor;
		color: #000000;
		border: 1px solid #ccc;
		transform: rotate(-10deg);
		font-size: 0.7rem;
		font-weight: normal;
		padding-left: 0.3em;
		padding-right: 0.3em;
		position: relative;
		left: -0.5em;
}

div.VIADemoUnitComponent {
		span.uk-label.demoLabel {
				margin-left: 0.2em;
		}
}

div.demoRibbon {
		@dim: 20em;
		
		position: fixed;
		width: @dim;
		height: @dim;
		bottom: -(@dim/1.8);
		right: -(@dim/1.9);
		padding-top: 1em;
		transform-origin: center;
		transform: rotate(-45deg);
		z-index: 999999; 

		div.ribbonText {
				width: 100%;
				text-align: center;
				border-top: 1px solid black;
				padding: 0.3em 1em 10em 1em;
				background: @demoColor;
				color: black;
		}
}

// Cookiebar redefinitions
// #cookie-bar-button {
// 		background-color:  !important;
// }

// ============================================
// Misc
// ============================================

// TODO: Oben einsortieren!

figure.inlineAssetImage {
		display: inline-block;
		margin: 0;

		figcaption {
				line-height: 1em;
				span.assetInfo {
						font-size: 75%;
						float: right;
				}
		}
}

span.inlineAssetAudio {
		audio {
				display: inline-block;
				width: 5em;
		}

		div.mejs__container {
				display: inline-block;
				width: 5em;
				vertical-align: middle;
		}
}

.correct {
		background-color: @correctColor;
}

.wrong {
		// why?!
//		background-color: transparent;
}

span.partiallyCorrectIcon {
		color: orange;
}

span.correctIcon {
		color: #1a1;
}

span.wrongIcon {
		color: red;
		padding-left: 2px;
		padding-right: 2px;
}

div.webui-popover {
		div.webui-popover-content {
				word-break: break-word;
				max-width: 20em;
		}
		
		span.markAsEmpty {
				cursor: pointer;
				border: 2px solid green;

				&.active {
						background-color: green;
				}
		}

}


div.VIAAurExerciserSolutionComponent {
		.colors() {
				// background-color: lightyellow;

				&.answerWasWrong {
						// background-color: @wrongColor;
				}

				&.answerWasCorrect {
						background-color: @correctColor;
				}

		}

		.solution {
				.colors();
		}

		div.clozeText {
				span.selectOneInput.solution {
						border: 1px dotted black;
				}
 
				input.clozeTextPlaceholder.solution {
						.colors();
						
						&.blankIsSolution {
								//						width: 2em;
								color: transparent;
						}
				}
		}
}


div.VIAAurMainGlossaryExerciser {
		padding-top: 2em;
}


span.copyPaste, pre.copyPaste {
		cursor: pointer;
}




// // TODO Evt. innerhalb taskEditor
// div.inputEditor {
// 		> div.inputEditor {
// 				border: 1px solid #333;
// 				background-color: #f3f3f3;
// 				padding: 5px;
// 				margin: 10px 0;
// 		}
// }

span.dictionaryEntry {
		// border-bottom: 1px dotted #333;
		text-decoration: underline;
		text-decoration-color: #333;
		text-decoration-style: dotted; 
}



div.moduleBody {
		clear: both;
		position: relative; // Wichtig, damit eingebettete versteckte absolute-Elemente die Breite korrekt berechnen können
}

.testdriveTools {
		font-size: 80%;
		color: #999;

		a {
				color: #666;
		}
}


// =======================================================================
// UI Breakpoints (leave at end of file, for CSS precedence)
// =======================================================================

@import "styles_aurea_responsive.less";


// Keep this for Emacs editor!
//
// Local Variables:
// less-css-compile-at-save: t
// End:
